					IT jobs
					
					
		FS 				Tools				Testing or QA 
		
	Java				Devops				Manual
	Python				PowerBi				Automation
	.net				Salesforce
						Service Now
	
					
					
Testing or QA  

Manual Testing 

					Automation	Testing

	Selenium				Cypress			Playwrite		TOSCA 	

----------------------------------------------------------------------------	
					
						Selenium
						
	Java		Python			C#			Ruby		JS 					
						
						
Selenium + Java 

--------------------------------------------------------------------------------						
						
						Testing
						
						
		Functional					Non-Functional
		
----------------------------------------------------------------------------------

					Functional	 Testing
					
		Manual						Automation			
		
------------------------------------------------------------------------------------

Manual Testing

1) Software Testing Concepts
2) Software Testing Project
3) Agile Methodology and JIRA tool
4) SQL or Database Testing		
					
Automation Testing

Java
Selenium
		
		
1) Software Testing Concepts 		


Software : Set of instructions or programs to accomplish some task 

e.g whatsapp , calculator app etc ..

i) System softwares :

e.g Operating System , drivers etc 

ii) Programming Softwares

e.g compiler , interpreter ,debugging tools etc ..

iii) Application softwares 

e.g Web apps , mobile apps , stand alone , mainframe , silver lite , salesforce , SAP etc ..


what do we test in now-a-days apps ?

1)functionalities 
2) GUI Graphical user interface
3) usability
4) Performance 
5) Load 
6) Security 
7) Compatabilty

Testing :


It is a process of checking the developed software is working as per client business requirements or not.

->  to find defects 

the prime motto of testing is to deliver a quality and risk free product.

Terminolgies in Software testing :

1) Product

If a software application developed for multiple clients then it is product.

e.g 
NCR ==>ATM machine and s/w for HDFC,ICICI,kotak mahindra etc 
2) Project

If a software application developed for a specified client then it is project.

TCS ==> taking NCR product and customizing as per HDFC 

3) Error : Any incorrect human actions which gives wrong results .

If developer find the mistake in his testing 

4) Bug/Defect/Fault/Issue :

If the error is found by tester then it is called Bug/Defect/Fault/Issue.

5) Failure/Incident :

If the error is found by end user then it is called Failure/Incident.


Roles or Duties of Tester :

1) understanding application under test or Domain knowledge
2) Formal Testing (writing the test cases and executing)
3) Adhoc Testing (NO Test cases)
4) Report the defects to developers 
5) Retesting and Regression Testing
6) Develop and execute Automation scripts
7) Analyse the results 
8) publish test results


	Business Requirements 						Deploy
	
			|										|
			
	System Requirements						Build system 
	
			|										|								
	HLD High Level Design					Integrate Units 
	
			|										|
		
	LLD Low Level Design					Builds   Units
	 
			|										|
		
									Code 		
	

Now-a-days Testing :

Testing is a process of checking are we developing right software or not and also
checking the developed software is working as per client business requirements or not.


			Software Testing = Verification + Validation
			
			
Software Testing Principles :

1) Exhaustive testing is impossible 
2) Defect Clustering 
3) Pesticide Paradox 
4) Early Testing 
5) Testing is application dependent and situation dependent
6) Testing should show presence of defects
7) Absence of defects is fallacy 


Software Development Life Cycle (SDLC) :


BA/Sales Team					Gathering Requirements					BRD/BRS/FRS/SRS
Domain Experts
										|
PM/TM/PL/TL  						Planing 							Project Play
																		Test Planing
										|
SA 									Design								Architecture Diagram/Sequence Diagrams
UX designer																Figma Designs 

										|
Developer							Coding                            Source Code -> Build 

										|
Tester/TL							Testing 							TSc / TCs / RTM
Developers
										|
Production Support team				Delivery & Maintenance				
			
			
									SDLC	Models
									
									
			1) Sequential 								2) Incremental 
				- Waterfall									- RAD model
				- V model									- Prototype
															- Spiral
															- Agile 
									
									
									
Waterfall :

- small projects 
- once completion of each phase , the phase get freezed (not to be edited)
- If requirements are clear then choose Waterfall model 

V- Model :

Verification and Validation Model

- small projects
- If requirements are not clear then choose V model 


RAD model : Rapid Application Development Model 

- Big Project 
- To be completed on short span of time 

e.g : Insurance project

where Auto Insurance , Health Insurance , Fire Insurance , Renters Insurance are independent of each other



Prototype Model : 

- Big projects 
- Here client doesn't have clear requirements and propose some reference application			
			
e.g : Zomato (Food delivery app) refering to Swiggy
			
Spiral Model :

-Big projects
- If there is dependency on requirements then go for Spiral Model 

e.g Banking Project (HDFC )
here Bill pay module depends on Funds Transfer
	 Funds Transfer depends on Accounts 




							Software Testing approaches
							
							
					Static Testing							Dynamic Testing
					    or									   or
					Verification							Validation
							
				- Reviews 								- Unit Testing
					i) Requirements Reviews				- Intergration Testing 
					ii) Project plan reviews			- System Testing
					iii) Design Reviews 				- UAT Testing (User Acceptance Testing)
					iv) Code Reviews 
					v) Test Case Reviews
				
				- Walk Throughs 
				    i) KT Sessions 
					
Formal Reviews  : 					


If a review activity carried out using proper documentaation or checklist then it is called Formal review.


Inspection :

If a review activity carried out during execution of task then it is called Inspection.

Audit : 					

If a review activity carried out after execution of task then it is called Audit .

InFormal Review : 

If a review activity carried out without documentaation or checklist then it is called InFormal review.


i) Requirements Reviews	:

Business Analysts / Sales Team / Domain or Subject Matter Experts 

ii) Project plan reviews
     - Project plan   (Project Manager / Delivery Manager)
	 - Master test plan  (Test Manager / Lead Principal QA )

iii) Design Reviews
      - System Design ( System Architect / Solution Architect)
	  - UX Design ( Lead UX designer)
iv) Code Reviews 
     Senoir Developer / Lead Developer
v) Test Case Reviews
		Test Lead / Test Manager
		
Peer Reviews : Reviews carried out by peers (same level)

Unit Testing :  Developers 

a smallest part of the application (a method / function / procedure) to be tested 


Intergration Testing  : Devlopers 

After integrating the units, testing done on  method / function / procedure is called Intergration testing .

System Testing : 

Testing the app once the source code is compiled and deployed in a Server or System .



Functional System Testing Types :


1) Smoke Testing 

A quick test or rough test perfomed on new build  to verify major functionalities are working and also
application stability or consistencency .


2) Formal Testing 

3) Retesting 

The process of checking the bug is resolved in modified build is called ReTEsting .

4) Regression Testing

The process of checking the functionalities having any side effects because of code fix in modified build.

5) Sanity Testing  (subset of regression )

The process of checking the functionalities (subset of regression) in modified build (Preproduction or production build)

6) Priorty based testing 

If a formal testing performed based on priority of test cases .

Here they will mention which one to execute first , next and which one to be executed last.


7)End-to-End Testing 

Performing testing on stable builds to verify combination of journeys or functionalities

Special Functional System Testing Types :

8) BenchMark testing 

9) Exploratory Testing 

10) Monkey or Gorilla Testing (Adhoc- No test cases)

==========================================================================

Non-Functional System Testing Types :

1) UI or GUI Graphical User Interface Testing

to checking the alignmnet of web elements (textbox ,buttons , radio button etc ..)
spelling checking , color checking etc ..

2) Usability testing 

to check the user friendliness of the system / application 

3) Performance 

Responsiveness 
Stability 

i) Response time
ii) Processing time 
iii) User volume data 

Load Testing : 

-> Stress Testing 
-> Spike Testing 
-> Soak Testing 
-> Data volume testing 

4) Security Testing 

Encription
Cookies injection 

5) Globalization or Internationalization or I18N Testing

6) Localization or L10N testing 

7) Recovery Testing 

8) Installation testing 

9) UnInstallation testing 

------------------------------------------
UAT or User Acceptance Testing

Alpha Testing :

Testing carried out at company premises 


Beta Testing :


Testing carried out at client prmises



===================================================================================
Module 2: Software Testing Project 

TM / TL / Testers 

TM -  Test Manager
TL - Test Lead 
Tester 

STLC or Software Testing Life Cycle 


	  PM/TM/TL				Test Planning          Test Strategy & Test plan 
								 |
		TL/Testers			Test Analysis		   RCN - Requirements Clarification Notes 
								 |
		Testers				Test Design            TSC  , TCs (TSC - Test Scenario , TC -  Test cases)
								 |
	Testers/Dev Team		Test Execution         smoke test ,Reporting Defects , Retesting , Regression
								 |
		TM/TL				Test closure           Test summary reports
		
		
----------------------------------------------------
Test Planning          

Test Strategy  : It's a high level document which tells about the testing activities carried out for a project.

Test plan : 

It's a detailed document which tells about the testing activities carried out for a project.


====================================================
A typical Test Plan document will consists of below sections :


1)	Project Overview 
2)	Documents references ( links for BRS/FRS/SRS or User stories)
3) 	Scope of Testing 
		3.1	In Scope 
		3.2 Out Scope
4) Test Strategy document
5) Test Environments
	test A :  https://www.testa.adactinhotelapp.com
	test B :  https://www.testb.adactinhotelapp.com
6) Test Deliverables: 
	Test Scenarios
	Test Cases
	Test Scripts
	RTM - Requirements Tracability Matrix 
7) Staffing plan 
8) Risk Planning and Mitigation plan 
9) work Schedules 
10) Approvals or Sign off 

-------------------------------------------------
Test Analysis

RCN - Requirements Clarification Notes 

It's a document where testers record or make a note of the doubts about the flow or functionalities 
and get it clarified by Test Lead or BA (Business Analysts)

---------------------------------------------------------
Test Design 


Writing Test Scenario


Test Scenario is nothing but a functionality / journey / behaviour /feature to be tested in 
Application under test .

In simple words , what to test ?


?????????????????????????????????????????????????????????
Assignment -1 

use Test Scenario template and write Test Scenario for
Facebook HomePage  and send the template to below email id 


riyazsirnotes@gmail.com
????????????????????????????????????????????????????????????

Test Case :

Test case is a set of preconditions , steps , test data etc. to test a functionality.

In simple words , how to test ?



?????????????????????????????????????????????????????????
Assignment -2 

Use test case template and complete the remaning test cases 
for Adactin login scenario 

and send the template to below email id 


riyazsirnotes@gmail.com
?????????????????????????????????????????????????????????????

Test Management tool 

Zephr Squad , Cucumber studio , qtest etc ...


Cucumber studio :


steps to create cucumber studio account :

https://studio.cucumber.io/users/sign_up


naveenpasala91@gmail.com

Newpass@123369


?????????????????????????????????????????????????????????
Assignment -3

Create a Cucumber studio account and project 
take screenshot and send it to below email id 


riyazsirnotes@gmail.com 

???????????????????????????????????????????????????????????????

	old way 						now-a-days ( Agile Methodology)

	Requirements					User Stories
		|								|
	Test Scenarios					Features / Behaviour
		|								|
	Test Cases 						Scenarios
	
	
Gherkin language to write Test cases or Scenarios


#Author: your.email@your.domain.com
#Keywords Summary :
#Feature: List of scenarios.
#Scenario: Business rule through list of steps with arguments.
#Given: Some precondition step
#When: Some key actions
#Then: To observe outcomes or validation
#And,But: To enumerate more Given,When,Then steps
#Scenario Outline: List of steps for data-driven as an Examples and <placeholder>
#Examples: Container for s table
#Background: List of steps run before each of the scenarios
#""" (Doc Strings)
#| (Data Tables)
#@ (Tags/Labels):To group Scenarios
#<> (placeholder)
#""
## (Comments)
#Sample Feature Definition Template
@tag
Feature: Title of your feature
  I want to use this template for my feature file

  @tag1
  Scenario: Title of your scenario
    Given I want to write a step with precondition
    And some other precondition
    When I complete action
    And some other action
    And yet another action
    Then I validate the outcomes
    And check more outcomes

  @tag2
  Scenario Outline: Title of your scenario outline
    Given I want to write a step with <name>
    When I check for the <value> in step
    Then I verify the <status> in step

    Examples: 
      | name  | value | status  |
      | name1 |     5 | success |
      | name2 |     7 | Fail    |


?????????????????????????????????????????????????????????
Assignment -4

Write the test cases or Scenarios of adactinhotelapp Login functionality
using Cucumber studio and send your credentials 

to below email id 

riyazsirnotes@gmail.com 

????????????????????????????????????????????????????????????

Test Case Design Techniques :

1)Equivalance Class Partitioning (ECP)
2)Boundary value Analysis(BVA)
3)Decission Table Testing
4)State Transition Testing
5)Error guessing


-------------------------------------------
1)Equivalance Class Partitioning (ECP)


2)Boundary value Analysis(BVA)


3)Decission Table Testing
or Business Rules Testing or Cause Effect Testing 

If output of a functionality depends on more than one input ,
developer might have used logical operators ( and , or etc..)
Here we need to check the combitnations 

											   n 
mininum number of combinations for n inputs = 2


???????????????????????????????????????????????????????????
Assignment - 5

Write test cases or prepare Decission Table for below 
requirement or Functionality

Assume , there is Food Delivery App , 
3 inputs are there in a page ( Existing Customer , New Customer , Coupon code )

						Discount
Existing Customer		15 %
New Customer			35 %
Coupon					25 %


to below email id 

riyazsirnotes@gmail.com 

????????????????????????????????????????????????????????????

4)State Transition Testing 



???????????????????????????????????????????????????????????
Assignment - 5


Come up with Test cases / State Trasition Diagram for 
Registration flow in AdactinHotelApp

send your assignment to to below email id 

riyazsirnotes@gmail.com 

???????????????????????????????????????????????????????????????

5)Error guessing 

This can be achived by experience 


*********************************************
Requirements Tracability Matrix


???????????????????????????????????????????????????????????
Assignment - 6

Assume there are 4 requirements in facebook homepage

R1.1 Login
R1.2 Fogot Password
R1.3 Create New Accounts
R1.4 Create a Page for Celebrity or brand 

come up with RTM for above 

send your assignment to to below email id 

riyazsirnotes@gmail.com 

??????????????????????????????????????????????????????????

=================================================================
Test Execution Phase 

1) Build Deployment
2) Build Acceptance Testing or Smoke Testing
3) Formal Testing or Executing Test Case
4) Report Defects/Bugs to Dev Team 
5) ReTesting
6) Regression Testing
7) End-to-End Testing


------------------------------------------------
1) Build Deployment

Build is a excutable form of Source Code 

Build can be in form of 

url for web apps
.apk file android mobile apps
.ipa file iOS Mobile apps 


-> DD (Deployment Document)
-> SRN (Software Release Notes )

----------------------------------------------------------------------
How to execute Tests in Cucumber Studio 


-----------------------------------------------------------------------
Defect or Bug Life Cycle 


Bug Life Cycle or Defect Life Cycle 


Bug Severity :

this tells about the seriousness of the defect or how much it impacts the business flow 

this will be given by tester 

Bug Priority :

the order in which bug to be resolved 

this will be given by developer 

							Defect Categorization	
							
							
		Severity														Priority
		
	Very High --> Blocker/ Show stopper --> Catastrophic                Very High  --> P0
	High      --> Critical 				--> Damage						High       --> P1
	Medium	  --> Major	                --> hindering					Medium     --> P2
	Low		  --> Minor                 --> Cosmetic					Low        --> P3
	
		
		
Very High --> Blocker/ Show stopper --> Catastrophic 

This defects indicates nothing can be proceed further 

e.g Application is getting crashed , Login not working 


High      --> Critical --> Damage 


The main / basic functionality of the app is not working 

e.g : Funds tranfers in banking app is not working 

Placing an order for the item added in the cart is not working


Medium	  --> Major	--> hindering		

It causes some undesirable behaviour in flows but still functionality will be working 

e.g : 

Sending an email and a confirmation dialog box not appearing 

Low		  --> Minor --> Cosmetic	

Defects related to spelling mistakes , colors , alignment issues 		



High Sevirity  and High Priority :

e.g Login functionality not working 

Low Servity and Low Priority :

a spelling mistake in a page not frequently visited 

Low Priority and High Sevirity : 

app refering old logo instead of new logo 
or
spelling mistake in Company or brand name 

High Priority and Low Severity :

for e.g in registration flow password and confirm password fields are not masked .


==============================================================
Bug Life Cycle :


???????????????????????????????????????????????????????????
Assignment - 7

In adactinhotelapp find atleast 4 defects and report in
bug template and send the excel to below email id

riyazsirnotes@gmail.com
?????????????????????????????????????????????????????????????


End-to-End Testing on Final or Stable 




----------------------------------------------------------------
----------------------------------------------------------------
Module 3 : Agile Methodology and JIRA tool


Agile Methodology is a SDLC Model 

is a iterative and incremental model 

Agile has different frameworks 

-> Scrum 
-> Kanban 
-> Scaled Agile etc ..

Scrum Framework :


group of people working for some goal or cause is called Scrum Team or Squad 

Scrum Team Consists of :

1) Product Owner (PO) or Project Manager (1)
2) Business Analyst (BA)  (1-2)
3) Scrum Master (SM) (1)
4) Solution Architect (SA) (1-2)
5) UX Design (1)
6) Dev Team (5 -8)
	i) FE 
		- Web
		- Android
		- iOS
	ii) BE 
		- Java Full Stack / Python full stack etc 
7) QA Team (2 - 3)
    i) Manual 
		- Web / Mobile / API 
	ii) Automation 
8) DevOps (1)
9) Database Engineer (1)

total team strength (14 - 20)



Terminolgies in Scrum Framework :

i) User Story : a behaviour / journey / feature / functionality in application
ii) Product Backlog : collection of user stories 
iii) Sprint : time period or time span to complete User Story
  duration can be 2 - 4 weeks
iv) Sprint Backlog : collection of user stories for a particular sprint 
v) story points : 
time estimate to complete a user story 
vi) Burndown chart 

----------------------------------------------------
Scrum Ceremonies or Scrum meetings 

i) Sprint/Scrum  planning 
ii) Daily Scrum or Daily standup or status call meeting 
iii) Backlog refinement / Grooming 
iv) Sprint Review or Demo 
v) Sprint Retrospective 



  
 